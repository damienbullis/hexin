name: Lint & Test CI

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    install:
        name: Install Dependencies
        runs-on: ubuntu-latest
        outputs:
            bun_cache: ${{ steps.cache.outputs.cache-hit }}
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Set up Bun
              id: setup-bun
              uses: oven-sh/setup-bun@v2

            - name: Install Dependencies
              run: bun install

            - name: Cache Bun Dependencies
              id: cache
              uses: actions/cache@v4
              with:
                  path: ~/.bun
                  key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
                  restore-keys: |
                      ${{ runner.os }}-bun-

    lint:
        name: Lint Code
        runs-on: ubuntu-latest
        needs: install
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Restore Bun Cache
              if: needs.install.outputs.bun_cache == 'true'
              uses: actions/cache@v4
              with:
                  path: ~/.bun
                  key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}

            - name: Set up Bun
              uses: oven-sh/setup-bun@v2

            - name: Install Dependencies
              run: bun install

            - name: Run Linter
              run: bun run lint

    test:
        name: Run Tests
        runs-on: ubuntu-latest
        needs: install
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Restore Bun Cache
              if: needs.install.outputs.bun_cache == 'true'
              uses: actions/cache@v4
              with:
                  path: ~/.bun
                  key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}

            - name: Set up Bun
              uses: oven-sh/setup-bun@v2

            - name: Install Dependencies
              run: bun install

            - name: Run Tests
              run: bun test
